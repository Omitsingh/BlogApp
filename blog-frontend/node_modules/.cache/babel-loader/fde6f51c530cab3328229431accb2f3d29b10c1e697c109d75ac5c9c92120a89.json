{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  console.log('API Request to:', config.url, 'Token exists:', !!token);\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  console.error('Request interceptor error:', error);\n  return Promise.reject(error);\n});\n\n// Handle authentication errors\napi.interceptors.response.use(response => {\n  console.log('API Response from:', response.config.url, 'Status:', response.status);\n  return response;\n}, error => {\n  var _error$config, _error$response, _error$response2, _error$response3;\n  console.error('API Error:', {\n    url: (_error$config = error.config) === null || _error$config === void 0 ? void 0 : _error$config.url,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  });\n  if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n    var _error$config2;\n    const url = ((_error$config2 = error.config) === null || _error$config2 === void 0 ? void 0 : _error$config2.url) || '';\n\n    // Don't redirect for auth endpoints\n    if (!url.includes('/auth/')) {\n      console.log('Authentication failed for non-auth endpoint, redirecting to login');\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      setTimeout(() => {\n        window.location.href = '/login';\n      }, 100);\n    }\n  }\n  return Promise.reject(error);\n});\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","console","log","url","Authorization","error","Promise","reject","response","status","_error$config","_error$response","_error$response2","_error$response3","data","_error$config2","includes","removeItem","setTimeout","window","location","href"],"sources":["C:/Users/Vivek singh/Desktop/blog_app_fixed/blog-frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    console.log('API Request to:', config.url, 'Token exists:', !!token);\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => {\r\n    console.error('Request interceptor error:', error);\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Handle authentication errors\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    console.log('API Response from:', response.config.url, 'Status:', response.status);\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', {\r\n      url: error.config?.url,\r\n      status: error.response?.status,\r\n      data: error.response?.data\r\n    });\r\n    \r\n    if (error.response?.status === 401) {\r\n      const url = error.config?.url || '';\r\n      \r\n      // Don't redirect for auth endpoints\r\n      if (!url.includes('/auth/')) {\r\n        console.log('Authentication failed for non-auth endpoint, redirecting to login');\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n        \r\n        setTimeout(() => {\r\n          window.location.href = '/login';\r\n        }, 100);\r\n      }\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,2BAA2B;AAEjF,MAAMC,GAAG,GAAGL,KAAK,CAACM,MAAM,CAAC;EACvBC,OAAO,EAAEN,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CACzBC,MAAM,IAAK;EACV,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3CC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEL,MAAM,CAACM,GAAG,EAAE,eAAe,EAAE,CAAC,CAACL,KAAK,CAAC;EACpE,IAAIA,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUN,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,EACAQ,KAAK,IAAK;EACTJ,OAAO,CAACI,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;EAClD,OAAOC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;;AAED;AACAf,GAAG,CAACI,YAAY,CAACc,QAAQ,CAACZ,GAAG,CAC1BY,QAAQ,IAAK;EACZP,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEM,QAAQ,CAACX,MAAM,CAACM,GAAG,EAAE,SAAS,EAAEK,QAAQ,CAACC,MAAM,CAAC;EAClF,OAAOD,QAAQ;AACjB,CAAC,EACAH,KAAK,IAAK;EAAA,IAAAK,aAAA,EAAAC,eAAA,EAAAC,gBAAA,EAAAC,gBAAA;EACTZ,OAAO,CAACI,KAAK,CAAC,YAAY,EAAE;IAC1BF,GAAG,GAAAO,aAAA,GAAEL,KAAK,CAACR,MAAM,cAAAa,aAAA,uBAAZA,aAAA,CAAcP,GAAG;IACtBM,MAAM,GAAAE,eAAA,GAAEN,KAAK,CAACG,QAAQ,cAAAG,eAAA,uBAAdA,eAAA,CAAgBF,MAAM;IAC9BK,IAAI,GAAAF,gBAAA,GAAEP,KAAK,CAACG,QAAQ,cAAAI,gBAAA,uBAAdA,gBAAA,CAAgBE;EACxB,CAAC,CAAC;EAEF,IAAI,EAAAD,gBAAA,GAAAR,KAAK,CAACG,QAAQ,cAAAK,gBAAA,uBAAdA,gBAAA,CAAgBJ,MAAM,MAAK,GAAG,EAAE;IAAA,IAAAM,cAAA;IAClC,MAAMZ,GAAG,GAAG,EAAAY,cAAA,GAAAV,KAAK,CAACR,MAAM,cAAAkB,cAAA,uBAAZA,cAAA,CAAcZ,GAAG,KAAI,EAAE;;IAEnC;IACA,IAAI,CAACA,GAAG,CAACa,QAAQ,CAAC,QAAQ,CAAC,EAAE;MAC3Bf,OAAO,CAACC,GAAG,CAAC,mEAAmE,CAAC;MAChFH,YAAY,CAACkB,UAAU,CAAC,OAAO,CAAC;MAChClB,YAAY,CAACkB,UAAU,CAAC,MAAM,CAAC;MAE/BC,UAAU,CAAC,MAAM;QACfC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ;MACjC,CAAC,EAAE,GAAG,CAAC;IACT;EACF;EACA,OAAOf,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,eAAef,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}